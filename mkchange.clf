%% Encoding of the game of monopoly

%% Equipment
% "The equipment consists of a board, 2 dice, tokens, 32 houses and 12
% Hotels. There are 16 Chance and 16 Community Chest cards, 28 Title Deed
% card (one for each property), and play money."


%% Rules of play
% "Starting with the Banker, each player in turn throws the dice. The player
% with the highest total starts the play. Place your token on the corner
% marked 'GO;, then throw the dice and move your token
% in the direction of the arrow) the number of spaces indicated by the dice.
% After you have completed your play, the turn passes to the left. The tokens
% remain on the spaces occupied and proceed from that point on the player's
% next turn. Two or more tokens may rest on the same space at the same time. 
% Depending on the space your token reaches, you may be entitled to buy real
% estate or other properties, or be obliged to pay rent, pay taxes, draw a
% Chance or Community Chest card, Go To Jail, or etc...



% "If you throw doubles, you move your token as usual, the sum of the two
% dice, and are subject to any privileges or penalties pertaining to the
% space on which you land. Retaining the dice, throw again and move your
% token as before. If you throw doubles three times in succession, move your
% token immediately to the space marked 'In Jail'."

%% The bank
% "Besides the Bank's money, the Bank holds the Title Deeds, and the houses
% and hotels prior to purchase by the players. The Bank pays salaries and
% bonuses. It sells and auctions properties and hands out the proper Title
% Deed cards when purchased by a player, it also sells houses and hotels to
% the players and loans money when required on mortgages.
% The Bank collects all taxes, fines, loans and interest, and the price of
% all properties which it sells and auctions. The Bank 'never goes broke.' If
% the Bank runs out of money, the Banker may issue as much as needed by
% writing on any ordinary paper."
bill : type.
$1 : bill.
$5 : bill.
$10 : bill.
$20 : bill.
$50 : bill.
$100 : bill.
$500 : bill.

player : type.
p1 : player.
p2 : player.

mkChange : player ->  type.
has$ : player -> bill -> type.

mkChange5-1   : mkChange P 
                * has$ P $5 -o 
                  {@mkChange P * has$ P $1 * has$ P $1 * has$ P $1 * has$ P $1 * has$ P $1}.
mkChange1-5   : mkChange P 
                * has$ P $1 * has$ P $1 * has$ P $1 * has$ P $1 * has$ P $1 -o 
                  {@mkChange P * has$ P $5}.
mkChange10-5  : mkChange P
                * has$ P $10 -o 
                  {@mkChange P * has$ P $5 * has$ P $5}.
mkChange5-10  : mkChange P * has$ P $5 * has$ P $5 -o 
                  {@mkChange P * has$ P $10}.
mkChange20-10 : mkChange P * has$ P $20 -o 
                  {@mkChange P * has$ P $10 * has$ P $10}.
mkChange10-20 : mkChange P * has$ P $10 * has$ P $10 -o 
                  {@mkChange P * has$ P $20}.
mkChange50-20_10 : 
                mkChange P * has$ P $50 -o 
                  {@mkChange P * has$ P $20 * has$ P $20 * has$ P $10}.
mkChange20_10-50 : 
                mkChange P * has$ P $20 * has$ P $20 * has$ P $10 -o 
                  {@mkChange P * has$ P $50}.
mkChange100-50   : 
                mkChange P * has$ P $100 -o 
                  {@mkChange P * has$ P $50 * has$ P $50}.
mkChange50-100 : 
                mkChange P * has$ P $50 * has$ P $50 -o 
                  {@mkChange P * has$ P $100}.
mkChange500-100 :
                mkChange P * has$ P $500 -o 
                  {@mkChange P 
                      * has$ P $100 
                      * has$ P $100 
                      * has$ P $100 
                      * has$ P $100 
                      * has$ P $100}.
mkChange100-500 : 
                mkChange P 
                * has$ P $100 
                * has$ P $100 
                * has$ P $100 
                * has$ P $100 
                * has$ P $100 -o 
                  {@mkChange P * has$ P $500}.

% stop making change
% mkChange_stop : mkChange P -o {1}.

nat : type.
z : nat. s : nat -> nat.
total$ : player -> nat -> type.
addToTotal : total$ P N * has$ P $1 -o {total$ P (s N)}.

% #trace * {mkChange p1 * has$ p1 $100}.
% #trace * {mkChange p1 * has$ p1 $100}.
% #trace * {mkChange p1 * has$ p1 $100}.
#query * * * 10 (@mkChange p1 * has$ p1 $100 * total$ p1 z -o {total$ p1 X}).

